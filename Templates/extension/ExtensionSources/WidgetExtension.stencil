//
//  {{ name }}.swift
//  {{ name }}
//
//  Created by {{ author }} on {{ date }}.
//  Copyright Â© {{ year }} {{ company }}. All rights reserved.
//

import WidgetKit
import SwiftUI

struct {{ name }}Provider: TimelineProvider {
    func placeholder(in context: Context) -> {{ name }}Entry {
        {{ name }}Entry(date: Date())
    }

    func getSnapshot(in context: Context, completion: @escaping ({{ name }}Entry) -> ()) {
        let entry = {{ name }}Entry(date: Date())
        completion(entry)
    }

    func getTimeline(in context: Context, completion: @escaping (Timeline<Entry>) -> ()) {
        var entries: [{{ name }}Entry] = []

        let currentDate = Date()
        for hourOffset in 0 ..< 5 {
            let entryDate = Calendar.current.date(byAdding: .hour, value: hourOffset, to: currentDate)!
            let entry = {{ name }}Entry(date: entryDate)
            entries.append(entry)
        }

        let timeline = Timeline(entries: entries, policy: .atEnd)
        completion(timeline)
    }
}

struct {{ name }}Entry: TimelineEntry {
    let date: Date
}

struct {{ name }}EntryView : View {
    var entry: {{ name }}Provider.Entry

    var body: some View {
        VStack {
            Text("Time:")
            Text(entry.date, style: .time)
        }
    }
}

@main
struct {{ name }}: Widget {
    let kind: String = "{{ name }}"

    var body: some WidgetConfiguration {
        StaticConfiguration(kind: kind, provider: {{ name }}Provider()) { entry in
            {{ name }}EntryView(entry: entry)
        }
        .configurationDisplayName("{{ name }}")
        .description("This is a {{ name }} widget.")
        .supportedFamilies([.systemSmall, .systemMedium, .systemLarge])
    }
}